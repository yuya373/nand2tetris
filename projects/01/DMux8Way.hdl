// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */
 -- sel[2] sel[1] sel[0] || a  b  c  d  e  f  g  h
 -- 0      0      0      || in 0  0  0  0  0  0  0
 -- 0      0      1      || 0  in 0  0  0  0  0  0
 -- 0      1      0      || 0  0  in 0  0  0  0  0
 -- 0      1      1      || 0  0  0  in 0  0  0  0
 -- 1      0      0      || 0  0  0  0  in 0  0  0
 -- 1      0      1      || 0  0  0  0  0  in 0  0
 -- 1      1      0      || 0  0  0  0  0  0  in 0
 -- 1      1      1      || 0  0  0  0  0  0  0  in


CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
    DMux(in=in, sel=sel[0], a=ACEG, b=BDFH);
    DMux(in=ACEG, sel=sel[1], a=AE, b=CG);
    DMux(in=BDFH, sel=sel[1], a=BF, b=DH);
    DMux(in=AE, sel=sel[2], a=a, b=e);
    DMux(in=CG, sel=sel[2], a=c, b=g);
    DMux(in=BF, sel=sel[2], a=b, b=f);
    DMux(in=DH, sel=sel[2], a=d, b=h);
}
